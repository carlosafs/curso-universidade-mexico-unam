d
class(d)
d
x<- 0:10
class(x)
a <- as.numeric(x)
b <- as.logical(x)
c <- as.character(x)
d <- as.integer(x)
class(a)
class(b)
class(c)
class(d)
a
b
c
d
f <- c(10)
f
f <- c(0:5)
f
v <- c(0:5)
v
m <- matrix(1:6, nrow =2, ncol = 3)
m
n
n <- matrix(nrow =2, ncol = 3)
n
dim(n)
class(dim(n))
atributes(n)
attributes(n)
ma
ma <- 1:10
ma
dim(ma) <- c(2:5)
ma
ma <- 1:10
ma
dim(ma) <- c(2:5)
ma
ma <- 1:10
ma
dim(ma) <- c(2:5)
dim(ma) <- c(2,5)
ma
x <- 5:8
y <- 12:15
cbind(x,y)
x <- 5:8
y <- 12:16
cbind(x,y)
x <- 5:9
y <- 12:16
cbind(x,y)
rbind(x,y)
x <- 5:9
y <- 12:21
cbind(x,y)
rbind(x,y)
x <- 5:9
y <- 12:16
cbind(x,y)
rbind(x,y)
x <- 5:9
y <- 12:21
cbind(x,y)
rbind(x,y)
x <- matrix(1:16, 4, 4)
y <- matrix(rep(5:16), 4, 4)
x
y
x + y
X*y
x*y
for (i in 1: length(x)){
+  print (x[i] + y[i])
+ }
for (i in 1: length(x)){
+  print(x[i] + y[i])
+}
for (i in 1: length(x)){+
print(x[i] + y[i])
+}
for (i in 1: length(x)){
+       print(x[i] + y[i])
+ }
for (i in 1:length(x)){
+       print(x[i] + y[i])
+ }
for (i in 1:length(x)){
print(x[i] + y[i])
}
t <- Sys.time()
typeof(t)
t
cat(t, "\n")
l <- as.POSIXlt(t)
l
typeof(l)
cat(l, "\n")
names(l)
l[[1]]
l[[2]]
t <- Sys.time()
cat(t, "\n")
tempo <- strftime(t, "%Y-%m-%d %H:%M:%S")
typeof(tempo)
tempo
minha_data <- c("2014-01-23 14:38:21")
typeof(minha_data)
transformando_data <- strptime(minha_data, "%Y-%m-%d %H:%M:%S")
transformando_data
typeof(transformando_data)
class(transformando_data)
minha_data1 <- c("2014-01-23 14:28:21")
transformando_data1 <- strptime(minha_data1, "%Y-%m-%d %H:%M:%S")
minha_data2 <- Sys.time()
minha_data2 - transformando_data1
data3 <- c("1 jan 2012", "1 jan 2013", "1 jan 2014")
transformando_em_data3 <- as.Data(data3, %d %b %Y)
class(transformando_em_data3)
data3 <- c("1 jan 2012", "1 jan 2013", "1 jan 2014")
transformando_em_data3 <- as.data(data3, %d %b %Y)
class(transformando_em_data3)
data3 <- c("1 jan 2012", "1 jan 2013", "1 jan 2014")
transformando_em_data3 <- as.data(data3, %d %m %Y)
class(transformando_em_data3)
data3 <- c("1 jan 2012", "1 jan 2013", "1 jan 2014")
transformando_em_data3 <- as.data(data3, "%d %b %Y")
class(transformando_em_data3)
data3 <- c("1 jan 2012", "1 jan 2013", "1 jan 2014")
transformando_em_data3 <- as.Data(data3, "%d %b %Y")
class(transformando_em_data3)
data3 <- c("1 jan 2012", "1 jan 2013", "1 jan 2014")
transformando_em_data3 <- as.Date(data3, "%d %b %Y")
class(transformando_em_data3)
data_de_origem <- as.Date(0, origin = "1977-12-25")
hoje <- Sys.Date()
hoje - data_de_origem
agora <- Sys.time()
agora
format(agora, "%H:%M")
diferenca <- as.difftime("00:30:00", "%H:%M:%S", units="hour")
nesse_momento <- Sys.time()
depois <- agora + diferenca
nesse_momento
depois
nesse_momento < depois
nesse_momento > depois
x <- list(1, "a", TRUE, 1+8i)
x
y <- factor(c("yes","yes", "no"))
y
table(y)
unclass(y)
z <- factor(c("SI", "NO", "NO"),
+ level = c("SI", "NO")
z
z <- factor(c("SI", "NO", "NO"),
+ level = c("SI", "NO"))
z
z <- factor(c("SI", "NO", "NO"), +
level = c("SI", "NO"))
z <- factor(c("SI", "NO", "NO"),
+ level = c("SI", "NO"))
z
y <- factor(c("SI", "NO", "NO"),
+ level = c("SI", "NO"))
y
y <- factor(c("SI", "NO", "NO"),
+ level = c("SI", "NO"))
y
e <- factor(c("SI", "NO", "NO"),
+ level = c("SI", "NO"))
e
e <- factor(c("SI", "NO", "NO"),
+ level = c("SI", "NO"))
e <- factor(c("SI", "NO", "NO"), level = c("SI", "NO"))
e
e <- factor(c("SI", "NO", "NO"),
level = c("SI", "NO"))
e
z <- factor(c("SI", "NO", "NO"),
level = c("SI", "NO"))
z
a <- c(5, 6, NA, 9, 10)
is.na(a)
#valores faltantes (NA ou NaN)
a <- c(5, 6, NA, 9, 10)
is.na(a)
is.nan(a)
b <- c(5,6, NaN, NA, 9, 10)
is.na(b)
tab1 <- data.frame(coluna1 = 1:4, coluna2 = c(T, T, T, F))
tab1
nrow(tab1)
ncol(tab1)
exemplo1 <- 11:14
names(exemplo1)
names(exemplo1) <- c("onze", "doze", "treze", "quatorze")
exemplo1
exemplo2 <- list(3, 5, 7)
names(exemplo2) <- c("um", "dois", "tres")
exemplo2
m <- matrix(1:4, nrow = 2, ncol = 2)
dimnames(m) <- list(c("a", "b"), c("h", "i"))
m
install.packages("swirl", dependencies = TRUE)
library("swirl")
install.packages("curl", dependencies = TRUE)
install.packages("httr", dependencies = TRUE)
install.packages("httr", dependencies = TRUE)
library("swirl")
library("swirl")
swirl()
library("swirl")
select_language()
swirl()
swirl()
library("swirl")
select_language()
swirl()
library("swirl")
select_language()
swirl()
install_course_github("ifunam", "programacion-estadistica-r")
swirl()
3 + 7
mi_varible <- (180 / 6) - 15
mi_variable <- (180 / 6) - 15
mi_variable
y <- c(561, 1105, 1729, 2465, 2821)
print(y)
1:100
c(1.1, 2.2, 3.3, 4.4) - c(1, 1, 1, 1)
c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10) - c(1, 2)
ls()
¡Hola Mundo!
"¡Hola Mundo!"
colores <- c("rojo", "azul", "verde", "azul", "rojo")
print (colores)
complejo <- "2+1i"
complejo <- 2+1i
mi_variable == 15
length(complejo) <- 3
complejo
2^1024
0/0
fecha_primer_curso_R <- Sys.Date()
fecha_primer_curso_R
vector("numeric", length = 10)
vector("character", length = 10)
vector("logical", length = 10)
list(0, "Hola", TRUE)
c(T, 19, 1+3i)
c <- vector("numeric", length = 5)
c
as.logical(c)
class(c)
as.logical(class(c))
class(as.logical(c))
m <- matrix(data = 1:12, nrow = 4, ncol = 3)
m
factor(colores)
data.frame(llave = y, color = colores)
mi_variable <- (180 / 60) - 15
mi_variable
x <- c("a","b", "c", "c", "d", "a")
x[3]
"a"
x[1]
x[1:5]
x[x > "b"]
index <- x > "a"
index
x[index]
m <- matrix(1:10, 2, 5)
m
m[1, 3]
m[1, ]
m[ ,4]
n <- matrix(1:20, 5, 4)
n[3, 4]
n[3, 4, drop = False]
n[3, 4, drop = FALSE]
n
n
n[3, 4, drop = FALSE]
n[3, 4, drop = TRUE]
n
n[1, ]
class(n[1, ])
n[1, , drop = FALSE]
class(n[1, , drop = FALSE])
lista_A <- list(ola1 = 1:10, ola2 = 0.005)
lista_A
lista_A[1]
lista_A[2]
lista_A[[1]]
lista_A[[1]]
lista_A$ola1
lista_A[[2]]
lista_A$ola2
lista_A[["ola2"]]
lista_A["ola2"]
lista_B <- list(ola1 = 2:7, ola2 = 0.90, ola3 = "ponte")
lista_B [c(1, 3)]
name <- "ola3"
lista_B [[name]]
lista_B$name
lista_B$ola3
j[[c(1, 3)]]
j <- list(b = list(10, 11, 12), b = c(9.8, 2.33))
j[[c(1, 3)]]
j[[1]][[3]]
j[[c(2,1)]]
j
f <- list(mmmddd223s = 1:35)
f[["m"]]
f$m
f[["m", exact = FALSE]]
p <- c(3231, 52, NA, NA, NA, 34)
faltantes <- is.na(p)
faltantes
p[!faltantes]
airquality[1:7, ]
nao_faltantes <- complete.cases(airquality)
nao_faltantes[1:7]
airquality[nao_faltantes, ][1:5, ]
install_course_github("ifunam", "programacion-estadistica-r")
library("swirl")
select_language()
swirl ()
mi_vector <- c(11:30)
mi_vector
mi_vector[3]
mi_vector[1:5]
mi_vector[c(4, 6, 13)]
mi_vector[c(6, 13, 4)]
mi_vector[[3]]
mi_vector[-9:-15]
un_vector <- (rep(c(TRUE, FALSE), 10))
mi_vector[rep(c(TRUE,FALSE),10)]
mi_vector[c(FALSE, FALSE, TRUE)]
mi_vector > 20
mi_vector[(mi_vector > 20)]
mi_arreglo <- array(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18),dim=c(3,3,2))
mi_arreglo
mi_arreglo[1, 3, 2]
mi_arreglo[1:2, 1:2, 1]
mi_matriz <- matrix(1:9, nrow =3, ncol = 3)
mi_matriz[1, ]
mi_matriz[ , 1]
mi_matriz[2:3, ]
mi_matriz[c(1,3), ]
carro <- list(color = "rojo", nllantas = 4, marca = "Renault", ncilindros = 4)
carro$color
carro[c("ncilindros", "nllantas")]
carro[["marca"]]
carro[["mar", exact = FALSE]]
camioneta <- list(color = "azul", nllantas = 4, marca = "BMW", ncilindros = 6)
cochera <- list(carro, camioneta)
cochera
cochera[[c(2, 1)]]
cars
cars$speed
cars$dist>100
cars$speed[cars$dist>100]
inicial <- read.table("datos.txt", nrows = 100)
classes <- sapply(inicial, class)
classes
inicial <- read.table("datos.txt", nrows = 100)
install_course_github("ifunam", "programacion-estadistica-r")
library("swirl")
select_language()
swirl ()
swirl_temp
swir()l
swirl()
swirl_temp
detach("package:base", unload = TRUE)
library(base)
detach("package:base", unload = TRUE)
library(base)
swirl()
Ingresa datos <- read.table("swirl_temp/inmigintnalpry.csv", header=TRUE, sep=",", fileEncoding = "latin1")
datos <- read.table("swirl_temp/inmigintnalpry.csv", header=TRUE, sep=",", fileEncoding = "latin1")
datos_2 <- read.table("swirl_temp/inmigintnalpry.csv", header=TRUE, sep=",")
datos2 <- read.table("swirl_temp/inmigintnalpry.csv", header=TRUE, sep=",")
View(datos)
inicial <- read.table("swirl_temp/inmigintalpry.csv", header = TRUE, sep = ",", fileEncoding = "latin1", nrow = 100)
inicial <- read.table("swirl_temp/inmigintnalpry.csv", header = TRUE, sep = ",", fileEncoding = "latin1", nrow = 100)
clases <- sapply(inicial, class)
clases
datos <- read.table("swirl_temp/inmigintnalpry.csv", header = TRUE, sep = ",", fileEncoding = "latin1", colClasses = clases)
save(datos, clases, file = "swirl_temp/datos_inmigrates.RData")
rm(datos, clases)
ls()
load("swirl_temp/datos_inmigrates.RData")
ls()
write.table(datos, file = "swirl_temp/datos.txt")
r <- 4
if (r == 4){
x <- 1
} else {
x <- 3
y <- 4
}
x
y
r <- 3
if (r == 4){
x <- 1
} else {
x <- 3
y <- 4
}
r
x
y
for (i in 1:10){
print (i)
}
minhas_letras <- c("a", "b", "c", "d")
for (letras in minhas_letras){
print(letras)
}
for (i in seq_along(minhas_letras)){
print(minhas_letras[i])
}
for (i in 1:length(minhas_letras)){
print(minhas_letras[i])
}
x <- seq (from = 1, to = 100, by = 0.5)
for (i in x){
print(i)
}
for (i in seq_len(nrow(x))){
for (j in seq_len(ncol(x)))
print (x[i,j])
}
}
x <- matrix (seq (1, 18, 2), 2), 3, 3)
for (i in seq_len(nrow(x))){
for (j in seq_len(ncol(x)))
print (x[i,j])
}
}
x <- matrix (seq (1, 18, 2), 3, 3)
for (i in seq_len(nrow(x))){
for (j in seq_len(ncol(x)))
print (x[i,j])
}
}
x <- matrix (seq (1, 18, 2), 3, 3)
for (i in seq_len(nrow(x))){
for (j in seq_len(ncol(x))){
print (x[i,j])
}
}
var <- 0
for(i in 1:10){
for(j in 1:5){
var <- var + j
}
}
j
var
while(contador < 10){
print(contador)
contador <- contador + 2
}
contador <- 0
contador <- 0
while(contador < 10){
print(contador)
contador <- contador + 2
}
a <- 5
while(a >= 3 && a <= 10){
print(a)
moeda <- rbinom(1, 1, 0.5)
if(moeda = 1){
a <- a + 1
} else {
a <- a - 1
}
}
a <- 5
while(a >= 3 && a <= 10){
print(a)
moeda <- rbinom(1, 1, 0.5)
if(moeda == 1){
a <- a + 1
} else {
a <- a - 1
}
}
for(i in 1:100){
if(i < 20){
next
}
print(i)
}
moedas <- rbinom(100, 1, 0.5)
moedas
mean(moedas)
mean(x = moedas)
mean(x = moedas, na.rm = FALSE)
mean(na.rm = FALSE, x = moedas)
library(askpass)
